var tipuesearch = {"pages": [{'title': 'About', 'text': '利用 Github Classroom 給每一位學員一個倉儲, a.k. (also known as) 網站 (靜態與動態) \n 每四位學員一組建立一個協同倉儲, a.k. 協同網站 (靜態與動態) \n 靜態網站: Github Pages, Nginx (under public_html) 或 Fossil SCM (under documentation) \n 動態網站: localhost, replit or Ubuntu server \n repo:  https://github.com/mdecycu/cp2023 \n site:  https://mde.tw/cp2023', 'tags': '', 'url': 'About.html'}, {'title': 'Computer', 'text': "Physical and Virtual PC ( Virtualbox ) \n Operating Systems: \n Windows \n Ubuntu \n Network: \n Internet \n The internet represents a global network of interconnected computer systems that facilitates the exchange of information and data across physical borders. This technology has emerged as one of the most significant inventions of modern times, transforming the way we communicate, conduct commerce, and access information. At its core, the internet comprises millions of connected computing systems and servers, linked together through a sophisticated architecture of routers, switches, and other networking components. It enables users to access a diverse range of digital resources, including email, social media platforms, online shopping, and entertainment services. The internet operates on a standardized set of protocols, such as Transmission Control Protocol/Internet Protocol (TCP/IP), which regulates the flow of data across the network. This allows computing devices, regardless of their location or operating system, to communicate and exchange information seamlessly. The internet has brought about a significant transformation in many aspects of modern life, facilitating unprecedented access to information and services. Its global reach has expanded commercial opportunities for businesses, enabling them to extend their reach beyond geographical borders. Furthermore, the internet has fostered new opportunities for collaboration and communication between people separated by distance. Nevertheless, the internet's ubiquitous nature and prevalence pose new challenges, including security threats and concerns over privacy. Consequently, significant research and development efforts continue towards developing new technologies and standards to bolster the security and resilience of the internet, while safeguarding its openness and accessibility for all users. \n WWW \n The World Wide Web (WWW) is an interconnected network of digital resources, which operates as a subset of the internet, providing users with an unprecedented ability to access and share information. The WWW has emerged as one of the most transformative technological advancements of the late 20th century, revolutionizing the way individuals obtain knowledge, conduct commerce, and collaborate with others. At its core, the WWW relies on standardized protocols, such as the Hypertext Transfer Protocol (HTTP), which regulate the transmission and retrieval of web resources across the internet. Web servers host these resources, which clients typically access through a web browser. The WWW has significantly impacted modern society, enabling individuals and businesses to share information and connect with others on a global scale. Through the WWW, users have access to an extensive range of digital resources, including web pages, multimedia content, and online services. The WWW has facilitated the globalization of commerce and expanded educational opportunities for learners around the world. However, the WWW also presents new challenges, including concerns regarding privacy, security, and the spread of misinformation. As such, significant research and development efforts continue to focus on enhancing the security and reliability of the web, while preserving its openness and accessibility for all users. \n Git distributed version control system: \n git_essential_document.7z  (password protected for cp2023) \n Git is a distributed version control system (VCS) designed for software development, providing a reliable and efficient means for managing source code and enabling collaborative development workflows. Developed by Linus Torvalds in 2005, it has since emerged as a widely adopted VCS, with a rich set of features and powerful tools for managing complex codebases. Git allows developers to track changes to their codebase over time, by creating and maintaining a history of all modifications made to files and directories. It provides a decentralized architecture, where each developer has their own local copy of the repository, which can be synced with remote repositories, such as those hosted on GitHub or GitLab. Git's robust set of features includes branching and merging, which enable developers to create isolated copies of the codebase, work on new features or bug fixes, and then merge those changes back into the main codebase when ready. This allows developers to experiment with new ideas and features, without disrupting the overall stability of the codebase. Additionally, Git provides tools for resolving conflicts that may arise when multiple developers are working on the same codebase. It supports a wide range of workflows, including peer code review, continuous integration, and deployment, which enhance collaboration and productivity. In conclusion, Git represents a key technology in modern software development, offering a flexible, scalable, and reliable means for managing codebases and enabling collaborative workflows. Its widespread adoption across the industry attests to its robustness and effectiveness in handling complex software development tasks. \n", 'tags': '', 'url': 'Computer.html'}, {'title': 'Javascript', 'text': '瀏覽器就是你的電腦程式環境 \n http://jsforcats.com/  (貓咪學 JavaScript) \n https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide \n https://eloquentjavascript.net/ \n \n', 'tags': '', 'url': 'Javascript.html'}, {'title': 'Brython', 'text': 'https://stackabuse.com/an-introductory-guide-to-brython/   \n https://www.geeksforgeeks.org/introduction-to-brython/   \n https://realpython.com/brython-python-in-browser/   \n \n cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束 ', 'tags': '', 'url': 'Brython.html'}, {'title': 'Python', 'text': 'https://do1.dr-chuck.com/pythonlearn/EN_us/pythonlearn.pdf \n https://python.swaroopch.com/ \n https://github.com/wenbindu/ThinkPython2-CN \n https://automatetheboringstuff.com/2e/chapter0/ \n Flask based: \n https://github.com/mdecycu/cmsimde \n PyQt based: \n https://github.com/leo-editor/leo-editor   \n https://github.com/KmolYuan/Pyslvs-UI   \n', 'tags': '', 'url': 'Python.html'}, {'title': 'ANSI C', 'text': 'https://www.learn-c.org/ \n https://www.programiz.com/c-programming \n Arduino: \n https://docs.arduino.cc/ \n https://www.tinkercad.com/circuits   \n https://wokwi.com/   \n https://all3dp.com/2/best-arduino-simulators-online-offline/   \n Tiny C Compiler: \n https://bellard.org/tcc/', 'tags': '', 'url': 'ANSI C.html'}]};